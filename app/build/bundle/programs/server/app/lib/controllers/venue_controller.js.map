{"version":3,"sources":["meteor://ðŸ’»app/lib/controllers/venue_controller.js"],"names":[],"mappings":";;;;;;;;AAAA,eAAe,GAAG,eAAe,CAAC,MAAM,CAAC;;;;;;;AAOvC,eAAa,EAAE,YAAW;AACxB,QAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AACzB,QAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,YAAY,EAAC,QAAQ,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACrD,QAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,YAAY,EAAC,OAAO,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACpD,QAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,YAAY,EAAC,QAAQ,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACrD,QAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,YAAY,EAAC,QAAQ,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACrD,QAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,YAAY,EAAC,UAAU,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACvD,QAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,YAAY,EAAC,OAAO,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACpD,QAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,YAAY,EAAC,SAAS,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACtD,QAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,YAAY,EAAC,WAAW,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACxD,QAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,YAAY,EAAC,OAAO,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;;;GAGrD;;;;;;;AAOD,QAAM,EAAE,YAAY,EACnB;;;;;;;;AAQD,MAAI,EAAE,YAAY;AAChB,WAAO;AACL,QAAE,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG;AACnB,YAAM,EAAE,IAAI,CAAC,MAAM;AACnB,WAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK;AACxB,UAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI;KACvB;GACF;;;;AAID,OAAK,EAAE,YAAY;AACjB,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,SAAO,EAAE,YAAY;AACnB,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,gBAAc,EAAE,YAAY;AAC1B,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;;;;;;;;;;AAUD,QAAM,EAAE,YAAY;AAClB,QAAI,OAAO,GAAG;AACZ,YAAM,EAAG,YAAY;KACtB;AACD,QAAG,IAAI,CAAC,MAAM,CAAC,OAAO,KAAK,SAAS,EAAC;AACnC,UAAI,CAAC,MAAM,EAAE,CAAC;KACf,MACG;AACF,UAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;KAC3C;GACF;AACD,eAAa,EAAE,YAAY,EAC1B;AACD,QAAM,EAAE,YAAY,EACnB;CACF,CAAC,CAAC,sE","file":"/lib/controllers/venue_controller.js","sourcesContent":["VenueController = RouteController.extend({\n\n  // A place to put your subscriptions\n  // this.subscribe('items');\n  // // add the subscription to the waitlist\n  // this.subscribe('item', this.params._id).wait();\n\n  subscriptions: function() {\n    var params = this.params;\n    this.subscribe('To', {'collection':'Staffs'}).wait();\n    this.subscribe('To', {'collection':'Teams'}).wait();\n    this.subscribe('To', {'collection':'Venues'}).wait();\n    this.subscribe('To', {'collection':'Spaces'}).wait();\n    this.subscribe('To', {'collection':'Payments'}).wait();\n    this.subscribe('To', {'collection':'Logos'}).wait();\n    this.subscribe('To', {'collection':'Posters'}).wait();\n    this.subscribe('To', {'collection':'Galleries'}).wait();\n    this.subscribe('To', {'collection':'Users'}).wait();\n\n    // this.subscribe('Spaces', params.id);\n  },\n\n  // Subscriptions or other things we want to \"wait\" on. This also\n  // automatically uses the loading hook. That's the only difference between\n  // this option and the subscriptions option above.\n  // return Meteor.subscribe('post', this.params._id);\n\n  waitOn: function () {\n  },\n\n  // A data function that can be used to automatically set the data context for\n  // our layout. This function can also be used by hooks and plugins. For\n  // example, the \"dataNotFound\" plugin calls this function to see if it\n  // returns a null value, and if so, renders the not found template.\n  // return Posts.findOne({_id: this.params._id});\n\n  data: function () {\n    return {\n      id: this.params._id,\n      params: this.params,\n      query: this.params.query,\n      hash: this.params.hash\n    }\n  },\n\n  // You can provide any of the hook options\n\n  onRun: function () {\n    this.next();\n  },\n  onRerun: function () {\n    this.next();\n  },\n  onBeforeAction: function () {\n    this.next();\n  },\n\n  // The same thing as providing a function as the second parameter. You can\n  // also provide a string action name here which will be looked up on a Controller\n  // when the route runs. More on Controllers later. Note, the action function\n  // is optional. By default a route will render its template, layout and\n  // regions automatically.\n  // Example:\n  //  action: 'myActionFunction'\n\n  action: function () {\n    var section = {\n      'edit' : 'Editcastle'\n    }\n    if(this.params.section === undefined){\n      this.render();\n    }\n    else{\n      this.render(section[this.params.section]);\n    }\n  },\n  onAfterAction: function () {\n  },\n  onStop: function () {\n  }\n});\n"]}