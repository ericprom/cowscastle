{"version":3,"sources":["meteor://ðŸ’»app/lib/collections/venues.js"],"names":[],"mappings":"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","file":"/lib/collections/venues.js","sourcesContent":["Venues = new Mongo.Collection('venues');\nvar Schemas = {};\nSchemas.VenueLocation = new SimpleSchema({\n  address: {\n      type: String,\n      label: 'Venue Address',\n      optional: true\n    },\n    latlng: {\n        type: [Number],\n        decimal: true\n    },\n    district: {\n      type: String,\n      label: 'Venue District',\n      optional: true\n    },\n    city: {\n      type: String,\n      label: 'Venue City',\n      optional: true\n    },\n    province: {\n      type: String,\n      label: 'Venue Province',\n      optional: true\n    },\n    zipcode: {\n      type: String,\n      label: 'Venue Zipcode',\n      optional: true\n    },\n    phone: {\n      type: String,\n      label: 'Venue Phone Number',\n      optional: true\n    },\n    email: {\n      type: String,\n      label: 'Venue Email',\n      optional: true\n    },\n    website: {\n      type: String,\n      label: 'Venue Website',\n      optional: true\n    },\n});\nSchemas.VenueDetail = new SimpleSchema({\n    slogan: {\n      type: String,\n      label: 'Venue Slogan',\n      optional: true\n    },\n    description: {\n      type: String,\n      label: 'Venue Description',\n      optional: true\n    },\n    floors: {\n      type: String,\n      label: 'Venue Floor',\n      optional: true\n    },\n    areas: {\n      type: String,\n      label: 'Venue Areas',\n      optional: true\n    },\n    rooms: {\n      type: String,\n      label: 'Venue Rooms',\n      optional: true\n    },\n    desks: {\n      type: String,\n      label: 'Venue Desks',\n      optional: true\n    }\n});\nSchemas.VenueFacility = new SimpleSchema({\n    facility_id: {\n      type: String,\n      label: 'Facility ID',\n      optional: true\n    },\n    status: {\n      type: Boolean,\n      label: 'Facility status',\n      optional: true\n    }\n});\nSchemas.Venue = new SimpleSchema({\n    name: {\n      type: String,\n      label: 'Venue Name'\n    },\n    logo: {\n      type: String,\n      label: 'Venue Logo',\n      optional: true\n    },\n    gallery: {\n      type: [Object],\n      label: 'Venue Gallaery',\n      optional: true,\n      blackbox:true\n    },\n    location: {\n      type: Schemas.VenueLocation,\n      label: 'Venue Location',\n      optional: true\n    },\n    detail: {\n      type: Schemas.VenueDetail,\n      label: 'Venue Detail',\n      optional: true\n    },\n    facility: {\n      type: [Schemas.VenueFacility],\n      label: 'Venue Detail',\n      optional: true\n    },\n    createdBy:{\n      type: String,\n      optional: true\n    },\n    createdAt:{\n      type: Date,\n      optional: true\n    },\n    updatedBy:{\n      type: String,\n      optional: true\n    },\n    updatedAt:{\n      type: Date,\n      optional: true\n    },\n});\n\nVenues.attachSchema(Schemas.Venue);\nif (Meteor.isServer) {\n  Venues.allow({\n    insert: function (userId, doc) {\n      return true;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return true;\n    },\n\n    remove: function (userId, doc) {\n      return true;\n    }\n  });\n\n  Venues.deny({\n    insert: function (userId, doc) {\n      return false;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return false;\n    },\n\n    remove: function (userId, doc) {\n      return false;\n    }\n  });\n}\n"]}