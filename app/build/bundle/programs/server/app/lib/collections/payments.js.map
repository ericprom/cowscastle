{"version":3,"sources":["meteor://ðŸ’»app/lib/collections/payments.js"],"names":[],"mappings":";;;;;;;;AAAA,QAAQ,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AAC5C,IAAI,OAAO,GAAG,EAAE,CAAC;AACjB,OAAO,CAAC,OAAO,GAAG,IAAI,YAAY,CAAC;AAC/B,UAAQ,EAAE;AACR,QAAI,EAAE,MAAM;AACZ,SAAK,EAAE,UAAU;GAClB;AACD,WAAS,EAAE;AACT,QAAI,EAAE,MAAM;AACZ,SAAK,EAAE,WAAW;GACnB;AACD,cAAY,EAAE;AACZ,QAAI,EAAE,MAAM;AACZ,SAAK,EAAE,cAAc;GACtB;AACD,gBAAc,EAAE;AACd,QAAI,EAAE,MAAM;AACZ,SAAK,EAAE,gBAAgB;GACxB;AACD,WAAS,EAAC;AACR,QAAI,EAAE,MAAM;AACZ,YAAQ,EAAE,IAAI;GACf;AACD,WAAS,EAAC;AACR,QAAI,EAAE,IAAI;AACV,YAAQ,EAAE,IAAI;GACf;AACD,WAAS,EAAC;AACR,QAAI,EAAE,MAAM;AACZ,YAAQ,EAAE,IAAI;GACf;AACD,WAAS,EAAC;AACR,QAAI,EAAE,IAAI;AACV,YAAQ,EAAE,IAAI;GACf;CACJ,CAAC,CAAC;;AAEH,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACvC,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,UAAQ,CAAC,KAAK,CAAC;AACb,UAAM,EAAE,UAAU,MAAM,EAAE,GAAG,EAAE;AAC7B,aAAO,IAAI,CAAC;KACb;;AAED,UAAM,EAAE,UAAU,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE;AACnD,aAAO,IAAI,CAAC;KACb;;AAED,UAAM,EAAE,UAAU,MAAM,EAAE,GAAG,EAAE;AAC7B,aAAO,IAAI,CAAC;KACb;GACF,CAAC,CAAC;;AAEH,UAAQ,CAAC,IAAI,CAAC;AACZ,UAAM,EAAE,UAAU,MAAM,EAAE,GAAG,EAAE;AAC7B,aAAO,KAAK,CAAC;KACd;;AAED,UAAM,EAAE,UAAU,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE;AACnD,aAAO,KAAK,CAAC;KACd;;AAED,UAAM,EAAE,UAAU,MAAM,EAAE,GAAG,EAAE;AAC7B,aAAO,KAAK,CAAC;KACd;GACF,CAAC,CAAC;CACJ,wE","file":"/lib/collections/payments.js","sourcesContent":["Payments = new Mongo.Collection('payments');\nvar Schemas = {};\nSchemas.Payment = new SimpleSchema({\n    venue_id: {\n      type: String,\n      label: 'Venue ID'\n    },\n    bank_name: {\n      type: String,\n      label: 'Bank Name'\n    },\n    account_name: {\n      type: String,\n      label: 'Account Name'\n    },\n    account_number: {\n      type: String,\n      label: 'Account Number'\n    },\n    createdBy:{\n      type: String,\n      optional: true\n    },\n    createdAt:{\n      type: Date,\n      optional: true\n    },\n    updatedBy:{\n      type: String,\n      optional: true\n    },\n    updatedAt:{\n      type: Date,\n      optional: true\n    },\n});\n\nPayments.attachSchema(Schemas.Payment);\nif (Meteor.isServer) {\n  Payments.allow({\n    insert: function (userId, doc) {\n      return true;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return true;\n    },\n\n    remove: function (userId, doc) {\n      return true;\n    }\n  });\n\n  Payments.deny({\n    insert: function (userId, doc) {\n      return false;\n    },\n\n    update: function (userId, doc, fieldNames, modifier) {\n      return false;\n    },\n\n    remove: function (userId, doc) {\n      return false;\n    }\n  });\n}\n"]}