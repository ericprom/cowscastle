{"version":3,"sources":["meteor://ðŸ’»app/packages/mrt_log/packages/mrt_log.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gF","file":"/packages/mrt_log.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/mrt:log/log.js                                           //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nvar clivas = Npm.require('clivas'),                                  // 1\n      util = Npm.require('util');                                    // 2\n                                                                     // 3\n/*                                                                   // 4\n  Logger                                                             // 5\n */                                                                  // 6\nLogger = {                                                           // 7\n  _appName: Meteor.settings && Meteor.settings.app_name || 'Meteor', // 8\n  _logs: {                                                           // 9\n    error: {                                                         // 10\n      color: \"red\",                                                  // 11\n      enabled: true                                                  // 12\n    },                                                               // 13\n    debug: {                                                         // 14\n      color: \"cyan\",                                                 // 15\n      enabled: false                                                 // 16\n    }                                                                // 17\n  },                                                                 // 18\n  addLogType: function(name, color) {                                // 19\n    if (name && color) {                                             // 20\n      this._logs[name] = {                                           // 21\n        color: color,                                                // 22\n        enabled: true                                                // 23\n      }                                                              // 24\n    } else {                                                         // 25\n      this.log('error', 'Problem with addLogType method call');      // 26\n      return false;                                                  // 27\n    }                                                                // 28\n  },                                                                 // 29\n  enableLog: function(type) {                                        // 30\n    if (!this._logs[type]) {                                         // 31\n      return this._logs[type] = {                                    // 32\n        color: \"blue\",                                               // 33\n        enabled: true                                                // 34\n      };                                                             // 35\n    } else {                                                         // 36\n      return this._logs[type].enabled = true;                        // 37\n    }                                                                // 38\n  },                                                                 // 39\n  disableLog: function(type) {                                       // 40\n    return this._logs[type].enabled = false;                         // 41\n  },                                                                 // 42\n  log: function(type, message, value) {                              // 43\n    if (this._logs[type] && this._logs[type].enabled) {              // 44\n      if (!value) {                                                  // 45\n        if (_.isObject(message)) {                                   // 46\n          message = \"\\n\" + util.inspect(message, false, null);       // 47\n          return clivas.line(\"{green+bold: \" + this._appName + \"}{\" + this._logs[type].color + \": [\" + type + \"]}\" + message);\n        } else {                                                     // 49\n          return clivas.line(\"{green+bold: \" + this._appName + \"}{\" + this._logs[type].color + \": [\" + type + \"]}{white: \" + message + \"}\");\n        }                                                            // 51\n      } else {                                                       // 52\n        if (_.isObject(value)) {                                     // 53\n          value = \"\\n\" + util.inspect(value, false, null);           // 54\n          return clivas.line(\"{green+bold: \" + this._appName + \"}{\" + this._logs[type].color + \": [\" + type + \"]}{white: \" + message + \"}\" + value);\n        } else {                                                     // 56\n          return clivas.line(\"{green+bold: \" + this._appName + \"}{\" + this._logs[type].color + \": [\" + type + \"]}{white: \" + message + \"} :{magenta: \" + value + \"}\");\n        }                                                            // 58\n      }                                                              // 59\n    }                                                                // 60\n  },                                                                 // 61\n  startup: function() {                                              // 62\n    return clivas.line('\\u001B[2J\\u001B[0;0f{30+green:' + Array(5).join('=') + (\" \" + this._appName + \" \") + Array(50).join('=') + \"}\");\n  }                                                                  // 64\n};                                                                   // 65\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}