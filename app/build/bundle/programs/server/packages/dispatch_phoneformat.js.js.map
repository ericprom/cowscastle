{"version":3,"sources":["meteor://ðŸ’»app/packages/dispatch_phoneformat.js/server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iG","file":"/packages/dispatch_phoneformat.js.js","sourcesContent":["Meteor.methods({\n  /*\n   * Get the country of the client.\n   * @return country The country which the IP address of the client is in.\n   */\n  'phoneformat.getCountryForIp': function () {\n    var response = null;\n\n    // Lookup info for the client's IP address, not the server's\n    var clientIP = this.connection.clientAddress ||Â '';\n\n    // For local development, client connections are the client's local IP address.\n    // Do not pass in an IP address and the lookup will be based on the server's address.\n    clientIP = (clientIP === '127.0.0.1') ? '' : clientIP;\n\n    // If phoneformat is configured with a token, do the look up over https\n    if (Phoneformat.token) {\n      response = HTTP.get('https://ipinfo.io/' + clientIP + '?token=' + Phoneformat.token);\n    } else {\n      response = HTTP.get('http://ipinfo.io/' + clientIP);\n    }\n\n    return response.data && response.data.country;\n  }\n});\n\nPhoneformat = {};\n\n// Configure phoneformat to use https with a token\nPhoneformat.configure = function (options) {\n  options = options || {};\n\n  Phoneformat.token = options.token;\n};\n"]}