{"version":3,"sources":["meteor://ðŸ’»app/packages/manuel_reactivearray/packages/manuel_reactivearray.js"],"names":[],"mappingsuG","file":"/packages/manuel_reactivearray.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                            //\n// packages/manuel:reactivearray/ReactiveArray.coffee.js                                      //\n//                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                              //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar               \n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nReactiveArray = (function(_super) {\n  var isArray;\n\n  __extends(ReactiveArray, _super);\n\n  isArray = function(obj) {\n    return obj instanceof Array;\n  };\n\n  function ReactiveArray(p1, p2) {\n    var dep, item, pause, _i, _len;\n    dep = null;\n    pause = false;\n    this.changed = function() {\n      if (dep && !pause) {\n        return dep.changed();\n      }\n    };\n    this.depend = function() {\n      return dep.depend();\n    };\n    if (isArray(p1)) {\n      for (_i = 0, _len = p1.length; _i < _len; _i++) {\n        item = p1[_i];\n        this.push(item);\n      }\n      dep = p2;\n    } else {\n      dep = p1;\n    }\n    if (!(dep instanceof Tracker.Dependency)) {\n      dep = new Tracker.Dependency();\n    }\n    this.pause = function() {\n      return pause = true;\n    };\n    this.resume = function() {\n      pause = false;\n      return this.changed();\n    };\n  }\n\n  ReactiveArray.prototype.array = function() {\n    this.depend();\n    return Array.prototype.slice.call(this);\n  };\n\n  ReactiveArray.prototype.list = function() {\n    this.depend();\n    return this;\n  };\n\n  ReactiveArray.prototype.depend = function() {\n    this.depend();\n    return this;\n  };\n\n  ReactiveArray.prototype.push = function() {\n    var item;\n    item = ReactiveArray.__super__.push.apply(this, arguments);\n    this.changed();\n    return item;\n  };\n\n  ReactiveArray.prototype.unshift = function() {\n    var item;\n    item = ReactiveArray.__super__.unshift.apply(this, arguments);\n    this.changed();\n    return item;\n  };\n\n  ReactiveArray.prototype.pop = function() {\n    var item;\n    item = ReactiveArray.__super__.pop.apply(this, arguments);\n    this.changed();\n    return item;\n  };\n\n  ReactiveArray.prototype.shift = function() {\n    var item;\n    item = ReactiveArray.__super__.shift.apply(this, arguments);\n    this.changed();\n    return item;\n  };\n\n  ReactiveArray.prototype.remove = function(valueOrPredicate) {\n    var i, predicate, removedValues, underlyingArray, value;\n    underlyingArray = this;\n    removedValues = [];\n    predicate = typeof valueOrPredicate === \"function\" ? valueOrPredicate : function(value) {\n      return value === valueOrPredicate;\n    };\n    i = 0;\n    while (i < underlyingArray.length) {\n      value = underlyingArray[i];\n      if (predicate(value)) {\n        removedValues.push(value);\n        underlyingArray.splice(i, 1);\n        i--;\n      }\n      i++;\n    }\n    if (removedValues.length) {\n      this.changed();\n    }\n    return removedValues;\n  };\n\n  ReactiveArray.prototype.clear = function() {\n    while (this.length) {\n      this.pop();\n    }\n    this.changed();\n    return this;\n  };\n\n  ReactiveArray.prototype.concat = function() {\n    var a, ret, _i, _len;\n    ret = this.array();\n    for (_i = 0, _len = arguments.length; _i < _len; _i++) {\n      a = arguments[_i];\n      if (a instanceof ReactiveArray) {\n        ret = ret.concat(a.array());\n      } else {\n        ret = ret.concat(a);\n      }\n    }\n    return new ReactiveArray(ret);\n  };\n\n  ReactiveArray.prototype.indexOf = function() {\n    this.depend();\n    return ReactiveArray.__super__.indexOf.apply(this, arguments);\n  };\n\n  ReactiveArray.prototype.join = function() {\n    this.depend();\n    return ReactiveArray.__super__.join.apply(this, arguments);\n  };\n\n  ReactiveArray.prototype.lastIndexOf = function() {\n    this.depend();\n    return ReactiveArray.__super__.lastIndexOf.apply(this, arguments);\n  };\n\n  ReactiveArray.prototype.reverse = function() {\n    ReactiveArray.__super__.reverse.apply(this, arguments);\n    this.changed();\n    return this;\n  };\n\n  ReactiveArray.prototype.sort = function() {\n    ReactiveArray.__super__.sort.apply(this, arguments);\n    this.changed();\n    return this;\n  };\n\n  ReactiveArray.prototype.splice = function() {\n    var ret;\n    ret = ReactiveArray.__super__.splice.apply(this, arguments);\n    this.changed();\n    return ret;\n  };\n\n  return ReactiveArray;\n\n})(Array);\n////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}